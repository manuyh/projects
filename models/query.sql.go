// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package models

import (
	"context"
	"database/sql"
)

const getAllCatalogs = `-- name: GetAllCatalogs :many
SELECT
    ci.id,ci.identifier,ci.label,c.name
FROM catalogs_items AS ci
JOIN catalogs AS c
ON c.id = ci.catalog_id
`

type GetAllCatalogsRow struct {
	ID         int64  `json:"id"`
	Identifier int64  `json:"identifier"`
	Label      string `json:"label"`
	Name       string `json:"name"`
}

func (q *Queries) GetAllCatalogs(ctx context.Context) ([]GetAllCatalogsRow, error) {
	rows, err := q.db.QueryContext(ctx, getAllCatalogs)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllCatalogsRow
	for rows.Next() {
		var i GetAllCatalogsRow
		if err := rows.Scan(
			&i.ID,
			&i.Identifier,
			&i.Label,
			&i.Name,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const storeResponse = `-- name: StoreResponse :execresult
INSERT INTO responses (
    identifier,
    gender,
    age,
    age_unit,
    birthdate,
    deathdate,
    variable1,
    variable2,
    a,
    time_a,
    time_unit_a,
    b,
    time_b,
    time_unit_b,    
    c,
    time_c,
    time_unit_c,    
    d,
    time_d,
    time_unit_d,    
    part_2,
    time_part_2,
    time_unit_part_2,    
    surgery,
    surgery_date,
    autopsy,
    used_foundings,
    manner_of_death,
    place_of_death,
    multiple_pregnancy,
    hours_alive,
    weight_in_grams,
    full_weeks_of_pregnancy,
    mother_age_in_years,
    woman_pregnancy_condition,
    pregnancy_contribution_to_death
) VALUES (
    ?,?,?,?,?,?,?,?,?,?,
    ?,?,?,?,?,?,?,?,?,?,
    ?,?,?,?,?,?,?,?,?,?,
    ?,?,?,?,?,?
)
`

type StoreResponseParams struct {
	Identifier                   int64  `json:"identifier"`
	Gender                       int64  `json:"gender"`
	Age                          int64  `json:"age"`
	AgeUnit                      int64  `json:"age_unit"`
	Birthdate                    string `json:"birthdate"`
	Deathdate                    string `json:"deathdate"`
	Variable1                    string `json:"variable1"`
	Variable2                    string `json:"variable2"`
	A                            string `json:"a"`
	TimeA                        int64  `json:"time_a"`
	TimeUnitA                    int64  `json:"time_unit_a"`
	B                            string `json:"b"`
	TimeB                        int64  `json:"time_b"`
	TimeUnitB                    int64  `json:"time_unit_b"`
	C                            string `json:"c"`
	TimeC                        int64  `json:"time_c"`
	TimeUnitC                    int64  `json:"time_unit_c"`
	D                            string `json:"d"`
	TimeD                        int64  `json:"time_d"`
	TimeUnitD                    int64  `json:"time_unit_d"`
	Part2                        string `json:"part_2"`
	TimePart2                    int64  `json:"time_part_2"`
	TimeUnitPart2                int64  `json:"time_unit_part_2"`
	Surgery                      int64  `json:"surgery"`
	SurgeryDate                  string `json:"surgery_date"`
	Autopsy                      int64  `json:"autopsy"`
	UsedFoundings                int64  `json:"used_foundings"`
	MannerOfDeath                int64  `json:"manner_of_death"`
	PlaceOfDeath                 int64  `json:"place_of_death"`
	MultiplePregnancy            int64  `json:"multiple_pregnancy"`
	HoursAlive                   int64  `json:"hours_alive"`
	WeightInGrams                int64  `json:"weight_in_grams"`
	FullWeeksOfPregnancy         int64  `json:"full_weeks_of_pregnancy"`
	MotherAgeInYears             int64  `json:"mother_age_in_years"`
	WomanPregnancyCondition      int64  `json:"woman_pregnancy_condition"`
	PregnancyContributionToDeath int64  `json:"pregnancy_contribution_to_death"`
}

func (q *Queries) StoreResponse(ctx context.Context, arg StoreResponseParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, storeResponse,
		arg.Identifier,
		arg.Gender,
		arg.Age,
		arg.AgeUnit,
		arg.Birthdate,
		arg.Deathdate,
		arg.Variable1,
		arg.Variable2,
		arg.A,
		arg.TimeA,
		arg.TimeUnitA,
		arg.B,
		arg.TimeB,
		arg.TimeUnitB,
		arg.C,
		arg.TimeC,
		arg.TimeUnitC,
		arg.D,
		arg.TimeD,
		arg.TimeUnitD,
		arg.Part2,
		arg.TimePart2,
		arg.TimeUnitPart2,
		arg.Surgery,
		arg.SurgeryDate,
		arg.Autopsy,
		arg.UsedFoundings,
		arg.MannerOfDeath,
		arg.PlaceOfDeath,
		arg.MultiplePregnancy,
		arg.HoursAlive,
		arg.WeightInGrams,
		arg.FullWeeksOfPregnancy,
		arg.MotherAgeInYears,
		arg.WomanPregnancyCondition,
		arg.PregnancyContributionToDeath,
	)
}
